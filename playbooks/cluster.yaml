---
- name: Apply configurations to masters group
  hosts: masters, workers
  vars_files:
    - /vagrant/vault.yaml
  gather_facts: false
  become: true
  roles:
    - common
    - cri
    - kubeadm

- name: Install k8s on masters node
  hosts: masters
  vars_files:
    - /vagrant/vault.yaml
  gather_facts: false
  become: true

  tasks:
  - name: Reset existing cluster
    shell: kubeadm reset -f

  - name: Remove .kube in user home directory
    shell: rm -rf ~{{ ansible_ssh_user }}/.kube

  - name: Remove /etc/kubernetes/manifests directory
    shell: rm -rf /etc/kubernetes/manifests

  - name: Remove /var/lib/etcd directory
    shell: rm -rf /var/lib/etcd

  - name: Init kubernetes cluster
    shell: kubeadm init --control-plane-endpoint=192.168.3.11:6443 --upload-certs --apiserver-advertise-address=192.168.3.11 --pod-network-cidr=10.244.0.0/16
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Create .kube folder
    file:
      path: "~{{ ansible_ssh_user }}/.kube"
      state: directory
      owner: "{{ ansible_ssh_user }}"
      group: "{{ ansible_ssh_user }}"
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Copy admin.conf to .kube folder
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "~{{ ansible_ssh_user }}/.kube/config"
      owner: "{{ ansible_ssh_user }}"
      group: "{{ ansible_ssh_user }}"
      remote_src: yes
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Deploy flannel network
    become_user: vagrant
    shell: kubectl apply -f /vagrant/kube-flannel.yml
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Print join command
    shell: kubeadm token create --print-join-command
    register: kubernetes_join_command
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Copy join command to local
    become: no
    local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Generate certificate key
    shell: kubeadm init phase upload-certs --upload-certs
    register: kubernetes_certificate_key
    run_once: yes
    delegate_to: "192.168.3.11"

  - name: Execute master join command
    become: yes
    when: ansible_host != "192.168.3.11"
    shell: "{{ kubernetes_join_command.stdout_lines[0] }} --control-plane --certificate-key {{ kubernetes_certificate_key.stdout_lines[2] }} --apiserver-advertise-address={{ ansible_host }}"

  - name: Edit kubeadm.conf
    blockinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      block: |
        Environment="KUBELET_EXTRA_ARGS=--node-ip={{ inventory_hostname }}"

  - name: Restart kubelet service
    service:
      name: kubelet
      daemon-reload: yes
      state: restarted

- name: Install cluster on worker nodes
  hosts: workers
  vars_files:
    - /vagrant/vault.yaml
  gather_facts: false
  become: true

  tasks:
  - name: Reset existing cluster
    shell: kubeadm reset -f

  - name: Remove .kube in user home directory
    shell: rm -rf ~{{ ansible_ssh_user }}/.kube

  - name: Remove /etc/kubernetes/manifests directory
    shell: rm -rf /etc/kubernetes/manifests

  - name: Copy join command to workers
    copy:
      src: /tmp/kubernetes_join_command
      dest: /tmp/kubernetes_join_command
      mode: 0777

  - name: Execute worker join command
    shell: sh /tmp/kubernetes_join_command

  - name: Edit kubeadm.conf
    blockinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      block: |
        Environment="KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}"

  - name: Restart kubelet service
    service:
      name: kubelet
      daemon-reload: yes
      state: restarted
